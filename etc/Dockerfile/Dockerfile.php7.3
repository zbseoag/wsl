FROM debian:buster
ENV PHP_CFLAGS="-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"
ENV PHP_CPPFLAGS="$PHP_CFLAGS"
ENV PHP_LDFLAGS="-Wl,-O1 -pie"
ENV GPG_KEYS CBAF69F173A0FEA4B537F470D66C9593118BCCB6 F38252826ACD957EF380D39F2F7956BC5DA04B5D
ENV PHP_VERSION 7.3.26
ENV PHP_TAR_URL="https://www.php.net/distributions/php-7.3.26.tar.xz"
ENV PHP_EXTRA_CONFIGURE_ARGS --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data

ENV WORKDIR /var/www
ENV PHP_INI_DIR /etc/php
ENV PHP_DEPS autoconf dpkg-dev file	g++	gcc libc-dev make pkg-config re2c ca-certificates curl xz-utils libzip-dev libzstd-dev libargon2-dev libcurl4-openssl-dev libedit-dev libsodium-dev libsqlite3-dev libssl-dev libxml2-dev zlib1g-dev  
ENV PHP_GD_DEPS libwebp-dev libjpeg-dev libpng-dev libfreetype6-dev
ENV PHP_GD_EXTRA --with-gd --with-webp-dir --with-jpeg-dir --with-png-dir --with-freetype-dir

#依赖
RUN set -eux; \
	sed -i "s/deb.debian.org/mirrors.aliyun.com/g" /etc/apt/sources.list; \
	apt-get update; \
	apt-get install -y  $PHP_DEPS $PHP_GD_DEPS ${PHP_EXTRA_BUILD_DEPS:-} ; 

RUN set -eux; \
	mkdir -p /usr/src;
COPY php.tar.xz  /usr/src/

COPY docker-php-*  /usr/local/bin/
COPY docker-php-source /usr/local/bin/
RUN { echo '#!/bin/sh'; echo 'exec pkg-config "$@" freetype2'; } > /usr/local/bin/freetype-config && chmod +x /usr/local/bin/freetype-config

RUN set -eux; \
	[ ! -d "$WORKDIR" ]; \
	mkdir -p "$WORKDIR"; \
	chown www-data:www-data "$WORKDIR"; \
	chmod 777 "$WORKDIR"; 

RUN set -eux; \
	docker-php-source extract; 
	
RUN set -eux; \
	cd /usr/src/php; \
	./configure \
	--build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
	--with-config-file-path="$PHP_INI_DIR" \
	--sysconfdir="$PHP_INI_DIR" \
	--enable-option-checking=fatal \
	--with-mhash \
	--with-pic \
	--enable-ftp \
	--enable-mbstring \
	--enable-mysqlnd \
	--with-password-argon2 \
	--with-sodium \
	--with-pdo-sqlite=/usr \
	--with-sqlite3=/usr \
	--with-curl \
	--with-libedit \
	--with-openssl \
	--with-zlib \
	--with-mysqli \
	--with-pdo-mysql \
	--with-gettext \
	--with-pear  \
	--enable-zip \
	--enable-xml \
	--enable-bcmath \
	--enable-shmop \
	--enable-sysvsem \
	--enable-mbregex \
	--enable-sockets \
	--enable-soap \
	--enable-pcntl \
	--enable-debug \
	--enable-calendar \
	$PHP_GD_EXTRA \
	${PHP_EXTRA_CONFIGURE_ARGS:-} ; \
	\
	export CFLAGS="$PHP_CFLAGS" CPPFLAGS="$PHP_CPPFLAGS" LDFLAGS="$PHP_LDFLAGS"; \
	make -j "$(nproc)"; \
	find -type f -name '*.a' -delete; \
	make install; \
	find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; \
	make clean; \
	cp -v php.ini-development "$PHP_INI_DIR/php.ini"; \
	cd /; \
	docker-php-source delete; \
	pecl update-channels; \
	php --version

ENTRYPOINT ["docker-php-entrypoint"]
WORKDIR "$WORKDIR"

RUN set -eux; \
	cd $PHP_INI_DIR; \
	if [ -d php-fpm.d ]; then \
		sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null; \
		mv php-fpm.d/www.conf.default php-fpm.d/www.conf; \
	else \
		mkdir php-fpm.d; \
		mv php-fpm.conf.default php-fpm.d/www.conf; \
		{ \
			echo '[global]'; \
			echo 'include=etc/php-fpm.d/*.conf'; \
		} | tee php-fpm.conf; \
	fi; \
	rm php-fpm.conf.default; \
	{ \
		echo '[global]'; \
		echo 'error_log = /proc/self/fd/2'; \
		echo; \
		echo 'log_limit = 8192'; \
		echo 'daemonize = no'; \
		echo; \
		echo '[www]'; \
		echo '; if we send this to /proc/self/fd/1, it never appears'; \
		echo 'access.log = /proc/self/fd/2'; \
		echo; \
		echo 'clear_env = no'; \
		echo 'listen = 9000'; \
		echo 'catch_workers_output = yes'; \
		echo 'decorate_workers_output = no'; \
	} | tee php-fpm.d/docker.conf; \
	pecl install psr;\
	pecl install phalcon; \
	pecl install igbinary; \
	pecl install redis; \
	{ echo extension=psr; echo extension=phalcon; echo extension=igbinary; echo extension=redis;} | tee -a php.ini;\
	cat ~/.bashrc > ~/.bashrc;
	#rm -rf /var/lib/apt/lists/*

STOPSIGNAL SIGQUIT
EXPOSE 9000
CMD ["php-fpm"]

